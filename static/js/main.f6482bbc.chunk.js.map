{"version":3,"sources":["Switch.js","DateBuilder.js","App.js","reportWebVitals.js","index.js"],"names":["renderSwitch","param","dateBuilder","d","day","getDay","date","getDate","month","getMonth","year","getFullYear","App","useState","query","setQuery","weather","setWeather","className","main","type","placeholder","onChange","e","target","value","onKeyPress","evt","key","fetch","process","then","res","json","result","console","log","name","sys","country","Date","Math","round","temp","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"qKAkBeA,MAlBf,SAAsBC,GAClB,OAAQA,GACJ,IAAK,QACL,IAAK,QACD,MAAO,YACX,IAAK,SACD,MAAO,YACX,IAAK,OACD,MAAO,WACX,IAAK,OACD,MAAO,WACX,IAAK,OACD,MAAO,WACX,QACI,MAAO,QCFJC,EAZK,SAACC,GACjB,IAGIC,EAFO,CAAC,SAAU,SAAU,UAAW,YAAa,WAAY,SAAU,YAE/DD,EAAEE,UACbC,EAAOH,EAAEI,UACTC,EALS,CAAC,UAAW,WAAY,QAAS,QAAS,MAAO,OAAQ,OAAQ,SAAU,YAAa,UAAW,WAAY,YAKzGL,EAAEM,YACjBC,EAAOP,EAAEQ,cAEb,MAAM,GAAN,OAAUP,EAAV,YAAiBE,EAAjB,YAAyBE,EAAzB,YAAkCE,I,OCqCvBE,MA1Cf,WAAgB,IAAD,EACaC,mBAAS,IADtB,mBACNC,EADM,KACCC,EADD,OAEiBF,mBAAS,IAF1B,mBAENG,EAFM,KAEGC,EAFH,KAgBb,OACE,qBAAKC,UAAmC,oBAAhBF,EAAQG,KAAuBnB,EAAagB,EAAQA,QAAQ,GAAGG,MAAQ,MAA/F,SACE,iCACE,qBAAKD,UAAU,aAAf,SACE,uBAAOE,KAAK,OAAOF,UAAU,aAAaG,YAAY,YAAYC,SAAU,SAAAC,GAAC,OAAIR,EAASQ,EAAEC,OAAOC,QACjGA,MAAOX,EAAOY,WAjBT,SAAAC,GACG,UAAZA,EAAIC,KACNC,MAAM,GAAD,OAAIC,2CAAJ,qBAAsDhB,EAAtD,+BAAkFgB,qCACpFC,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAG,GACJjB,EAAWiB,GACXnB,EAAS,IACToB,QAAQC,IAAIF,WAYW,oBAAhBlB,EAAQG,KACf,gCACE,sBAAKD,UAAU,eAAf,UACE,sBAAKA,UAAU,WAAf,UAA2BF,EAAQqB,KAAnC,KAA2CrB,EAAQsB,IAAIC,WACvD,qBAAKrB,UAAU,OAAf,SAAuBhB,EAAY,IAAIsC,WAEzC,sBAAKtB,UAAU,cAAf,UACE,sBAAKA,UAAU,OAAf,UACGuB,KAAKC,MAAM1B,EAAQG,KAAKwB,MAD3B,WAGA,qBAAKzB,UAAU,UAAf,SAA0BF,EAAQA,QAAQ,GAAGG,aAG9C,SC5BEyB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBf,MAAK,YAAkD,IAA/CgB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,SAM1BX,K","file":"static/js/main.f6482bbc.chunk.js","sourcesContent":["function renderSwitch(param) {\r\n    switch (param) {\r\n        case 'Clear':\r\n        case 'Sunny':\r\n            return 'app sunny';\r\n        case 'Clouds':\r\n            return 'app cloud';\r\n        case 'Rain':\r\n            return 'app rain';\r\n        case 'Snow':\r\n            return 'app snow';\r\n        case 'Haze':\r\n            return 'app warm';\r\n        default:\r\n            return 'app';\r\n    }\r\n}\r\n\r\nexport default renderSwitch;","const dateBuilder = (d) => {\r\n    let months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\r\n    let days = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"];\r\n\r\n    let day = days[d.getDay()];\r\n    let date = d.getDate();\r\n    let month = months[d.getMonth()];\r\n    let year = d.getFullYear();\r\n\r\n    return `${day} ${date} ${month} ${year}`\r\n}\r\n\r\nexport default dateBuilder;","import React, { useState } from 'react';\nimport renderSwitch from './Switch';\nimport dateBuilder from './DateBuilder';\n\nfunction App() {\n  const [query, setQuery] = useState('');\n  const [weather, setWeather] = useState({});\n\n  const search = evt => {\n    if (evt.key === \"Enter\") {\n      fetch(`${process.env.REACT_APP_WEATHER_API_URL}weather?q=${query}&units=metric&APPID=${process.env.REACT_APP_WEATHER_API_KEY}`)\n        .then(res => res.json())\n        .then(result => {\n          setWeather(result);\n          setQuery('');\n          console.log(result);\n        });\n    }\n  }\n\n  return (\n    <div className={(typeof weather.main != \"undefined\") ? renderSwitch(weather.weather[0].main) : 'app'}>\n      <main>\n        <div className=\"search-box\">\n          <input type=\"text\" className=\"search-bar\" placeholder=\"Search...\" onChange={e => setQuery(e.target.value)}\n            value={query} onKeyPress={search} />\n        </div>\n        {(typeof weather.main != \"undefined\") ? (\n          <div>\n            <div className=\"location-box\">\n              <div className=\"location\">{weather.name}, {weather.sys.country}</div>\n              <div className=\"date\">{dateBuilder(new Date())}</div>\n            </div>\n            <div className=\"weather-box\">\n              <div className=\"temp\">\n                {Math.round(weather.main.temp)}Â°c\n            </div>\n              <div className=\"weather\">{weather.weather[0].main}</div>\n            </div>\n          </div>\n        ) : ('')}\n      </main>\n    </div>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}